#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OfficeMapper.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Phones")]
	public partial class PhonesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertUserService(UserService instance);
    partial void UpdateUserService(UserService instance);
    partial void DeleteUserService(UserService instance);
    partial void InsertReadedMailMessage(ReadedMailMessage instance);
    partial void UpdateReadedMailMessage(ReadedMailMessage instance);
    partial void DeleteReadedMailMessage(ReadedMailMessage instance);
    partial void InsertActionLog(ActionLog instance);
    partial void UpdateActionLog(ActionLog instance);
    partial void DeleteActionLog(ActionLog instance);
    partial void InsertNewService(NewService instance);
    partial void UpdateNewService(NewService instance);
    partial void DeleteNewService(NewService instance);
    partial void InsertFileShareAccess(FileShareAccess instance);
    partial void UpdateFileShareAccess(FileShareAccess instance);
    partial void DeleteFileShareAccess(FileShareAccess instance);
    partial void InsertFileShareOwner(FileShareOwner instance);
    partial void UpdateFileShareOwner(FileShareOwner instance);
    partial void DeleteFileShareOwner(FileShareOwner instance);
    partial void InsertFileShare(FileShare instance);
    partial void UpdateFileShare(FileShare instance);
    partial void DeleteFileShare(FileShare instance);
    partial void InsertChangePhoneLog(ChangePhoneLog instance);
    partial void UpdateChangePhoneLog(ChangePhoneLog instance);
    partial void DeleteChangePhoneLog(ChangePhoneLog instance);
    partial void InsertEventLog(EventLog instance);
    partial void UpdateEventLog(EventLog instance);
    partial void DeleteEventLog(EventLog instance);
    partial void InsertRequestTicket(RequestTicket instance);
    partial void UpdateRequestTicket(RequestTicket instance);
    partial void DeleteRequestTicket(RequestTicket instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertAssignedService1(AssignedService1 instance);
    partial void UpdateAssignedService1(AssignedService1 instance);
    partial void DeleteAssignedService1(AssignedService1 instance);
    partial void InsertAssignedService(AssignedService instance);
    partial void UpdateAssignedService(AssignedService instance);
    partial void DeleteAssignedService(AssignedService instance);
    partial void InsertLogSiteAccess(LogSiteAccess instance);
    partial void UpdateLogSiteAccess(LogSiteAccess instance);
    partial void DeleteLogSiteAccess(LogSiteAccess instance);
    partial void InsertPrinter(Printer instance);
    partial void UpdatePrinter(Printer instance);
    partial void DeletePrinter(Printer instance);
    partial void InsertDiskDrive(DiskDrive instance);
    partial void UpdateDiskDrive(DiskDrive instance);
    partial void DeleteDiskDrive(DiskDrive instance);
    partial void InsertLogicalDisk(LogicalDisk instance);
    partial void UpdateLogicalDisk(LogicalDisk instance);
    partial void DeleteLogicalDisk(LogicalDisk instance);
    partial void InsertMail(Mail instance);
    partial void UpdateMail(Mail instance);
    partial void DeleteMail(Mail instance);
    partial void InsertLogin(Login instance);
    partial void UpdateLogin(Login instance);
    partial void DeleteLogin(Login instance);
    partial void InsertUserFile(UserFile instance);
    partial void UpdateUserFile(UserFile instance);
    partial void DeleteUserFile(UserFile instance);
    partial void InsertUserProgram(UserProgram instance);
    partial void UpdateUserProgram(UserProgram instance);
    partial void DeleteUserProgram(UserProgram instance);
    partial void InsertPhonesDruzhba(PhonesDruzhba instance);
    partial void UpdatePhonesDruzhba(PhonesDruzhba instance);
    partial void DeletePhonesDruzhba(PhonesDruzhba instance);
    partial void InsertCompanyObject(CompanyObject instance);
    partial void UpdateCompanyObject(CompanyObject instance);
    partial void DeleteCompanyObject(CompanyObject instance);
    partial void InsertOdinC(OdinC instance);
    partial void UpdateOdinC(OdinC instance);
    partial void DeleteOdinC(OdinC instance);
    #endregion
		
		public PhonesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["PhonesConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public PhonesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PhonesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PhonesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PhonesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<UserService> UserServices
		{
			get
			{
				return this.GetTable<UserService>();
			}
		}
		
		public System.Data.Linq.Table<ReadedMailMessage> ReadedMailMessages
		{
			get
			{
				return this.GetTable<ReadedMailMessage>();
			}
		}
		
		public System.Data.Linq.Table<ActionLog> ActionLogs
		{
			get
			{
				return this.GetTable<ActionLog>();
			}
		}
		
		public System.Data.Linq.Table<Phone> Phones
		{
			get
			{
				return this.GetTable<Phone>();
			}
		}
		
		public System.Data.Linq.Table<NewService> NewServices
		{
			get
			{
				return this.GetTable<NewService>();
			}
		}
		
		public System.Data.Linq.Table<FileShareAccess> FileShareAccesses
		{
			get
			{
				return this.GetTable<FileShareAccess>();
			}
		}
		
		public System.Data.Linq.Table<FileShareOwner> FileShareOwners
		{
			get
			{
				return this.GetTable<FileShareOwner>();
			}
		}
		
		public System.Data.Linq.Table<FileShare> FileShares
		{
			get
			{
				return this.GetTable<FileShare>();
			}
		}
		
		public System.Data.Linq.Table<ChangePhoneLog> ChangePhoneLogs
		{
			get
			{
				return this.GetTable<ChangePhoneLog>();
			}
		}
		
		public System.Data.Linq.Table<EventLog> EventLogs
		{
			get
			{
				return this.GetTable<EventLog>();
			}
		}
		
		public System.Data.Linq.Table<RequestTicket> RequestTickets
		{
			get
			{
				return this.GetTable<RequestTicket>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<AssignedService1> AssignedService1s
		{
			get
			{
				return this.GetTable<AssignedService1>();
			}
		}
		
		public System.Data.Linq.Table<AssignedService> AssignedServices
		{
			get
			{
				return this.GetTable<AssignedService>();
			}
		}
		
		public System.Data.Linq.Table<LogSiteAccess> LogSiteAccesses
		{
			get
			{
				return this.GetTable<LogSiteAccess>();
			}
		}
		
		public System.Data.Linq.Table<Acceptor> Acceptors
		{
			get
			{
				return this.GetTable<Acceptor>();
			}
		}
		
		public System.Data.Linq.Table<Network> Networks
		{
			get
			{
				return this.GetTable<Network>();
			}
		}
		
		public System.Data.Linq.Table<Printer> Printers
		{
			get
			{
				return this.GetTable<Printer>();
			}
		}
		
		public System.Data.Linq.Table<DiskDrive> DiskDrives
		{
			get
			{
				return this.GetTable<DiskDrive>();
			}
		}
		
		public System.Data.Linq.Table<LogicalDisk> LogicalDisks
		{
			get
			{
				return this.GetTable<LogicalDisk>();
			}
		}
		
		public System.Data.Linq.Table<Mail> Mails
		{
			get
			{
				return this.GetTable<Mail>();
			}
		}
		
		public System.Data.Linq.Table<Login> Logins
		{
			get
			{
				return this.GetTable<Login>();
			}
		}
		
		public System.Data.Linq.Table<UserFile> UserFiles
		{
			get
			{
				return this.GetTable<UserFile>();
			}
		}
		
		public System.Data.Linq.Table<UserProgram> UserPrograms
		{
			get
			{
				return this.GetTable<UserProgram>();
			}
		}
		
		public System.Data.Linq.Table<PhonesDruzhba> PhonesDruzhbas
		{
			get
			{
				return this.GetTable<PhonesDruzhba>();
			}
		}
		
		public System.Data.Linq.Table<CompanyObject> CompanyObjects
		{
			get
			{
				return this.GetTable<CompanyObject>();
			}
		}
		
		public System.Data.Linq.Table<OdinC> OdinCs
		{
			get
			{
				return this.GetTable<OdinC>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ImportPhones")]
		public int ImportPhones()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserServices")]
	public partial class UserService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Group;
		
		private string _ServiceName;
		
		private string _TechnicalResponsible;
		
		private System.Nullable<double> _ServiceCustomer;
		
		private string _ITApproving;
		
		private string _OwnerApproving;
		
		private string _InstallDocumentationLink;
		
		private string _HelpDocumentationLink;
		
		private string _Description;
		
		private string _Department;
		
		private string _DeprecationText;
		
		private EntitySet<RequestTicket> _RequestTickets;
		
		private EntitySet<AssignedService1> _AssignedService1s;
		
		private EntitySet<AssignedService> _AssignedServices;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnGroupChanging(string value);
    partial void OnGroupChanged();
    partial void OnServiceNameChanging(string value);
    partial void OnServiceNameChanged();
    partial void OnTechnicalResponsibleChanging(string value);
    partial void OnTechnicalResponsibleChanged();
    partial void OnServiceCustomerChanging(System.Nullable<double> value);
    partial void OnServiceCustomerChanged();
    partial void OnITApprovingChanging(string value);
    partial void OnITApprovingChanged();
    partial void OnOwnerApprovingChanging(string value);
    partial void OnOwnerApprovingChanged();
    partial void OnInstallDocumentationLinkChanging(string value);
    partial void OnInstallDocumentationLinkChanged();
    partial void OnHelpDocumentationLinkChanging(string value);
    partial void OnHelpDocumentationLinkChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDepartmentChanging(string value);
    partial void OnDepartmentChanged();
    partial void OnDeprecationTextChanging(string value);
    partial void OnDeprecationTextChanged();
    #endregion
		
		public UserService()
		{
			this._RequestTickets = new EntitySet<RequestTicket>(new Action<RequestTicket>(this.attach_RequestTickets), new Action<RequestTicket>(this.detach_RequestTickets));
			this._AssignedService1s = new EntitySet<AssignedService1>(new Action<AssignedService1>(this.attach_AssignedService1s), new Action<AssignedService1>(this.detach_AssignedService1s));
			this._AssignedServices = new EntitySet<AssignedService>(new Action<AssignedService>(this.attach_AssignedServices), new Action<AssignedService>(this.detach_AssignedServices));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Group]", Storage="_Group", DbType="NVarChar(255)")]
		public string Group
		{
			get
			{
				return this._Group;
			}
			set
			{
				if ((this._Group != value))
				{
					this.OnGroupChanging(value);
					this.SendPropertyChanging();
					this._Group = value;
					this.SendPropertyChanged("Group");
					this.OnGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceName", DbType="NVarChar(255)")]
		public string ServiceName
		{
			get
			{
				return this._ServiceName;
			}
			set
			{
				if ((this._ServiceName != value))
				{
					this.OnServiceNameChanging(value);
					this.SendPropertyChanging();
					this._ServiceName = value;
					this.SendPropertyChanged("ServiceName");
					this.OnServiceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TechnicalResponsible", DbType="NVarChar(255)")]
		public string TechnicalResponsible
		{
			get
			{
				return this._TechnicalResponsible;
			}
			set
			{
				if ((this._TechnicalResponsible != value))
				{
					this.OnTechnicalResponsibleChanging(value);
					this.SendPropertyChanging();
					this._TechnicalResponsible = value;
					this.SendPropertyChanged("TechnicalResponsible");
					this.OnTechnicalResponsibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceCustomer", DbType="Float")]
		public System.Nullable<double> ServiceCustomer
		{
			get
			{
				return this._ServiceCustomer;
			}
			set
			{
				if ((this._ServiceCustomer != value))
				{
					this.OnServiceCustomerChanging(value);
					this.SendPropertyChanging();
					this._ServiceCustomer = value;
					this.SendPropertyChanged("ServiceCustomer");
					this.OnServiceCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ITApproving", DbType="NVarChar(255)")]
		public string ITApproving
		{
			get
			{
				return this._ITApproving;
			}
			set
			{
				if ((this._ITApproving != value))
				{
					this.OnITApprovingChanging(value);
					this.SendPropertyChanging();
					this._ITApproving = value;
					this.SendPropertyChanged("ITApproving");
					this.OnITApprovingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerApproving", DbType="NVarChar(255)")]
		public string OwnerApproving
		{
			get
			{
				return this._OwnerApproving;
			}
			set
			{
				if ((this._OwnerApproving != value))
				{
					this.OnOwnerApprovingChanging(value);
					this.SendPropertyChanging();
					this._OwnerApproving = value;
					this.SendPropertyChanged("OwnerApproving");
					this.OnOwnerApprovingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallDocumentationLink", DbType="NVarChar(255)")]
		public string InstallDocumentationLink
		{
			get
			{
				return this._InstallDocumentationLink;
			}
			set
			{
				if ((this._InstallDocumentationLink != value))
				{
					this.OnInstallDocumentationLinkChanging(value);
					this.SendPropertyChanging();
					this._InstallDocumentationLink = value;
					this.SendPropertyChanged("InstallDocumentationLink");
					this.OnInstallDocumentationLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HelpDocumentationLink", DbType="NVarChar(255)")]
		public string HelpDocumentationLink
		{
			get
			{
				return this._HelpDocumentationLink;
			}
			set
			{
				if ((this._HelpDocumentationLink != value))
				{
					this.OnHelpDocumentationLinkChanging(value);
					this.SendPropertyChanging();
					this._HelpDocumentationLink = value;
					this.SendPropertyChanged("HelpDocumentationLink");
					this.OnHelpDocumentationLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="NVarChar(255)")]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this.OnDepartmentChanging(value);
					this.SendPropertyChanging();
					this._Department = value;
					this.SendPropertyChanged("Department");
					this.OnDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeprecationText", DbType="NVarChar(255)")]
		public string DeprecationText
		{
			get
			{
				return this._DeprecationText;
			}
			set
			{
				if ((this._DeprecationText != value))
				{
					this.OnDeprecationTextChanging(value);
					this.SendPropertyChanging();
					this._DeprecationText = value;
					this.SendPropertyChanged("DeprecationText");
					this.OnDeprecationTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserService_RequestTicket", Storage="_RequestTickets", ThisKey="Id", OtherKey="serviceId")]
		public EntitySet<RequestTicket> RequestTickets
		{
			get
			{
				return this._RequestTickets;
			}
			set
			{
				this._RequestTickets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserService_AssignedService1", Storage="_AssignedService1s", ThisKey="Id", OtherKey="ServiceId")]
		public EntitySet<AssignedService1> AssignedService1s
		{
			get
			{
				return this._AssignedService1s;
			}
			set
			{
				this._AssignedService1s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserService_AssignedService", Storage="_AssignedServices", ThisKey="Id", OtherKey="ServiceId")]
		public EntitySet<AssignedService> AssignedServices
		{
			get
			{
				return this._AssignedServices;
			}
			set
			{
				this._AssignedServices.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RequestTickets(RequestTicket entity)
		{
			this.SendPropertyChanging();
			entity.UserService = this;
		}
		
		private void detach_RequestTickets(RequestTicket entity)
		{
			this.SendPropertyChanging();
			entity.UserService = null;
		}
		
		private void attach_AssignedService1s(AssignedService1 entity)
		{
			this.SendPropertyChanging();
			entity.UserService = this;
		}
		
		private void detach_AssignedService1s(AssignedService1 entity)
		{
			this.SendPropertyChanging();
			entity.UserService = null;
		}
		
		private void attach_AssignedServices(AssignedService entity)
		{
			this.SendPropertyChanging();
			entity.UserService = this;
		}
		
		private void detach_AssignedServices(AssignedService entity)
		{
			this.SendPropertyChanging();
			entity.UserService = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReadedMailMessages")]
	public partial class ReadedMailMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _uid;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnuidChanging(string value);
    partial void OnuidChanged();
    #endregion
		
		public ReadedMailMessage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uid", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string uid
		{
			get
			{
				return this._uid;
			}
			set
			{
				if ((this._uid != value))
				{
					this.OnuidChanging(value);
					this.SendPropertyChanging();
					this._uid = value;
					this.SendPropertyChanged("uid");
					this.OnuidChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActionLog")]
	public partial class ActionLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<System.DateTime> _actionDate;
		
		private string _actionBy;
		
		private string _serviceId;
		
		private string _username;
		
		private string _actionName;
		
		private string _description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnactionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnactionDateChanged();
    partial void OnactionByChanging(string value);
    partial void OnactionByChanged();
    partial void OnserviceIdChanging(string value);
    partial void OnserviceIdChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnactionNameChanging(string value);
    partial void OnactionNameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public ActionLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_actionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> actionDate
		{
			get
			{
				return this._actionDate;
			}
			set
			{
				if ((this._actionDate != value))
				{
					this.OnactionDateChanging(value);
					this.SendPropertyChanging();
					this._actionDate = value;
					this.SendPropertyChanged("actionDate");
					this.OnactionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_actionBy", DbType="NVarChar(255)")]
		public string actionBy
		{
			get
			{
				return this._actionBy;
			}
			set
			{
				if ((this._actionBy != value))
				{
					this.OnactionByChanging(value);
					this.SendPropertyChanging();
					this._actionBy = value;
					this.SendPropertyChanged("actionBy");
					this.OnactionByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serviceId", DbType="NVarChar(255)")]
		public string serviceId
		{
			get
			{
				return this._serviceId;
			}
			set
			{
				if ((this._serviceId != value))
				{
					this.OnserviceIdChanging(value);
					this.SendPropertyChanging();
					this._serviceId = value;
					this.SendPropertyChanged("serviceId");
					this.OnserviceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(255)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_actionName", DbType="NVarChar(255)")]
		public string actionName
		{
			get
			{
				return this._actionName;
			}
			set
			{
				if ((this._actionName != value))
				{
					this.OnactionNameChanging(value);
					this.SendPropertyChanging();
					this._actionName = value;
					this.SendPropertyChanged("actionName");
					this.OnactionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(1024)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Phones")]
	public partial class Phone
	{
		
		private string _Code;
		
		private string _Dep;
		
		private string _Post;
		
		private string _PIB;
		
		private string _Phone1;
		
		private string _F6;
		
		private string _CityPhone;
		
		private string _Mobile;
		
		private string _Email;
		
		private string _Birthday;
		
		private string _Function;
		
		public Phone()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(255)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dep", DbType="NVarChar(255)")]
		public string Dep
		{
			get
			{
				return this._Dep;
			}
			set
			{
				if ((this._Dep != value))
				{
					this._Dep = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Post", DbType="NVarChar(255)")]
		public string Post
		{
			get
			{
				return this._Post;
			}
			set
			{
				if ((this._Post != value))
				{
					this._Post = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PIB", DbType="NVarChar(255)")]
		public string PIB
		{
			get
			{
				return this._PIB;
			}
			set
			{
				if ((this._PIB != value))
				{
					this._PIB = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Phone", Storage="_Phone1", DbType="NVarChar(255)")]
		public string Phone1
		{
			get
			{
				return this._Phone1;
			}
			set
			{
				if ((this._Phone1 != value))
				{
					this._Phone1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F6", DbType="NVarChar(255)")]
		public string F6
		{
			get
			{
				return this._F6;
			}
			set
			{
				if ((this._F6 != value))
				{
					this._F6 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityPhone", DbType="NVarChar(255)")]
		public string CityPhone
		{
			get
			{
				return this._CityPhone;
			}
			set
			{
				if ((this._CityPhone != value))
				{
					this._CityPhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(255)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this._Mobile = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(255)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthday", DbType="NVarChar(255)")]
		public string Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				if ((this._Birthday != value))
				{
					this._Birthday = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Function]", Storage="_Function", DbType="NVarChar(255)")]
		public string Function
		{
			get
			{
				return this._Function;
			}
			set
			{
				if ((this._Function != value))
				{
					this._Function = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NewServices")]
	public partial class NewService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ServiceName;
		
		private string _Description;
		
		private string _Login;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnServiceNameChanging(string value);
    partial void OnServiceNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    #endregion
		
		public NewService()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceName", DbType="NVarChar(1024)")]
		public string ServiceName
		{
			get
			{
				return this._ServiceName;
			}
			set
			{
				if ((this._ServiceName != value))
				{
					this.OnServiceNameChanging(value);
					this.SendPropertyChanging();
					this._ServiceName = value;
					this.SendPropertyChanged("ServiceName");
					this.OnServiceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1024)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="NVarChar(1024)")]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this.OnLoginChanging(value);
					this.SendPropertyChanging();
					this._Login = value;
					this.SendPropertyChanged("Login");
					this.OnLoginChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FileShareAccess")]
	public partial class FileShareAccess : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _FileSharesId;
		
		private string _samAccountName;
		
		private System.Nullable<bool> _AllowRead;
		
		private System.Nullable<bool> _AllowWrite;
		
		private System.Nullable<System.DateTime> _AcceptedOwner;
		
		private string _AcceptedOwnerBy;
		
		private System.Nullable<System.DateTime> _Requested;
		
		private EntityRef<FileShare> _FileShare;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFileSharesIdChanging(System.Nullable<int> value);
    partial void OnFileSharesIdChanged();
    partial void OnsamAccountNameChanging(string value);
    partial void OnsamAccountNameChanged();
    partial void OnAllowReadChanging(System.Nullable<bool> value);
    partial void OnAllowReadChanged();
    partial void OnAllowWriteChanging(System.Nullable<bool> value);
    partial void OnAllowWriteChanged();
    partial void OnAcceptedOwnerChanging(System.Nullable<System.DateTime> value);
    partial void OnAcceptedOwnerChanged();
    partial void OnAcceptedOwnerByChanging(string value);
    partial void OnAcceptedOwnerByChanged();
    partial void OnRequestedChanging(System.Nullable<System.DateTime> value);
    partial void OnRequestedChanged();
    #endregion
		
		public FileShareAccess()
		{
			this._FileShare = default(EntityRef<FileShare>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileSharesId", DbType="Int")]
		public System.Nullable<int> FileSharesId
		{
			get
			{
				return this._FileSharesId;
			}
			set
			{
				if ((this._FileSharesId != value))
				{
					if (this._FileShare.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFileSharesIdChanging(value);
					this.SendPropertyChanging();
					this._FileSharesId = value;
					this.SendPropertyChanged("FileSharesId");
					this.OnFileSharesIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_samAccountName", DbType="NVarChar(1024)")]
		public string samAccountName
		{
			get
			{
				return this._samAccountName;
			}
			set
			{
				if ((this._samAccountName != value))
				{
					this.OnsamAccountNameChanging(value);
					this.SendPropertyChanging();
					this._samAccountName = value;
					this.SendPropertyChanged("samAccountName");
					this.OnsamAccountNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowRead", DbType="Bit")]
		public System.Nullable<bool> AllowRead
		{
			get
			{
				return this._AllowRead;
			}
			set
			{
				if ((this._AllowRead != value))
				{
					this.OnAllowReadChanging(value);
					this.SendPropertyChanging();
					this._AllowRead = value;
					this.SendPropertyChanged("AllowRead");
					this.OnAllowReadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowWrite", DbType="Bit")]
		public System.Nullable<bool> AllowWrite
		{
			get
			{
				return this._AllowWrite;
			}
			set
			{
				if ((this._AllowWrite != value))
				{
					this.OnAllowWriteChanging(value);
					this.SendPropertyChanging();
					this._AllowWrite = value;
					this.SendPropertyChanged("AllowWrite");
					this.OnAllowWriteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptedOwner", DbType="DateTime")]
		public System.Nullable<System.DateTime> AcceptedOwner
		{
			get
			{
				return this._AcceptedOwner;
			}
			set
			{
				if ((this._AcceptedOwner != value))
				{
					this.OnAcceptedOwnerChanging(value);
					this.SendPropertyChanging();
					this._AcceptedOwner = value;
					this.SendPropertyChanged("AcceptedOwner");
					this.OnAcceptedOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptedOwnerBy", DbType="NVarChar(1024)")]
		public string AcceptedOwnerBy
		{
			get
			{
				return this._AcceptedOwnerBy;
			}
			set
			{
				if ((this._AcceptedOwnerBy != value))
				{
					this.OnAcceptedOwnerByChanging(value);
					this.SendPropertyChanging();
					this._AcceptedOwnerBy = value;
					this.SendPropertyChanged("AcceptedOwnerBy");
					this.OnAcceptedOwnerByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Requested", DbType="DateTime")]
		public System.Nullable<System.DateTime> Requested
		{
			get
			{
				return this._Requested;
			}
			set
			{
				if ((this._Requested != value))
				{
					this.OnRequestedChanging(value);
					this.SendPropertyChanging();
					this._Requested = value;
					this.SendPropertyChanged("Requested");
					this.OnRequestedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FileShare_FileShareAccess", Storage="_FileShare", ThisKey="FileSharesId", OtherKey="Id", IsForeignKey=true)]
		public FileShare FileShare
		{
			get
			{
				return this._FileShare.Entity;
			}
			set
			{
				FileShare previousValue = this._FileShare.Entity;
				if (((previousValue != value) 
							|| (this._FileShare.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FileShare.Entity = null;
						previousValue.FileShareAccesses.Remove(this);
					}
					this._FileShare.Entity = value;
					if ((value != null))
					{
						value.FileShareAccesses.Add(this);
						this._FileSharesId = value.Id;
					}
					else
					{
						this._FileSharesId = default(Nullable<int>);
					}
					this.SendPropertyChanged("FileShare");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FileShareOwners")]
	public partial class FileShareOwner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _FileShareId;
		
		private string _samAccountName;
		
		private EntityRef<FileShare> _FileShare;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFileShareIdChanging(System.Nullable<int> value);
    partial void OnFileShareIdChanged();
    partial void OnsamAccountNameChanging(string value);
    partial void OnsamAccountNameChanged();
    #endregion
		
		public FileShareOwner()
		{
			this._FileShare = default(EntityRef<FileShare>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileShareId", DbType="Int")]
		public System.Nullable<int> FileShareId
		{
			get
			{
				return this._FileShareId;
			}
			set
			{
				if ((this._FileShareId != value))
				{
					if (this._FileShare.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFileShareIdChanging(value);
					this.SendPropertyChanging();
					this._FileShareId = value;
					this.SendPropertyChanged("FileShareId");
					this.OnFileShareIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_samAccountName", DbType="NVarChar(1024)")]
		public string samAccountName
		{
			get
			{
				return this._samAccountName;
			}
			set
			{
				if ((this._samAccountName != value))
				{
					this.OnsamAccountNameChanging(value);
					this.SendPropertyChanging();
					this._samAccountName = value;
					this.SendPropertyChanged("samAccountName");
					this.OnsamAccountNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FileShare_FileShareOwner", Storage="_FileShare", ThisKey="FileShareId", OtherKey="Id", IsForeignKey=true)]
		public FileShare FileShare
		{
			get
			{
				return this._FileShare.Entity;
			}
			set
			{
				FileShare previousValue = this._FileShare.Entity;
				if (((previousValue != value) 
							|| (this._FileShare.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FileShare.Entity = null;
						previousValue.FileShareOwners.Remove(this);
					}
					this._FileShare.Entity = value;
					if ((value != null))
					{
						value.FileShareOwners.Add(this);
						this._FileShareId = value.Id;
					}
					else
					{
						this._FileShareId = default(Nullable<int>);
					}
					this.SendPropertyChanged("FileShare");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FileShares")]
	public partial class FileShare : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Code;
		
		private string _Name;
		
		private string _InformationClass;
		
		private System.Nullable<bool> _NewDomain;
		
		private string _Description;
		
		private EntitySet<FileShareAccess> _FileShareAccesses;
		
		private EntitySet<FileShareOwner> _FileShareOwners;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnInformationClassChanging(string value);
    partial void OnInformationClassChanged();
    partial void OnNewDomainChanging(System.Nullable<bool> value);
    partial void OnNewDomainChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public FileShare()
		{
			this._FileShareAccesses = new EntitySet<FileShareAccess>(new Action<FileShareAccess>(this.attach_FileShareAccesses), new Action<FileShareAccess>(this.detach_FileShareAccesses));
			this._FileShareOwners = new EntitySet<FileShareOwner>(new Action<FileShareOwner>(this.attach_FileShareOwners), new Action<FileShareOwner>(this.detach_FileShareOwners));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NChar(255)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(1024)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InformationClass", DbType="NVarChar(1024)")]
		public string InformationClass
		{
			get
			{
				return this._InformationClass;
			}
			set
			{
				if ((this._InformationClass != value))
				{
					this.OnInformationClassChanging(value);
					this.SendPropertyChanging();
					this._InformationClass = value;
					this.SendPropertyChanged("InformationClass");
					this.OnInformationClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewDomain", DbType="Bit")]
		public System.Nullable<bool> NewDomain
		{
			get
			{
				return this._NewDomain;
			}
			set
			{
				if ((this._NewDomain != value))
				{
					this.OnNewDomainChanging(value);
					this.SendPropertyChanging();
					this._NewDomain = value;
					this.SendPropertyChanged("NewDomain");
					this.OnNewDomainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1024)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FileShare_FileShareAccess", Storage="_FileShareAccesses", ThisKey="Id", OtherKey="FileSharesId")]
		public EntitySet<FileShareAccess> FileShareAccesses
		{
			get
			{
				return this._FileShareAccesses;
			}
			set
			{
				this._FileShareAccesses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FileShare_FileShareOwner", Storage="_FileShareOwners", ThisKey="Id", OtherKey="FileShareId")]
		public EntitySet<FileShareOwner> FileShareOwners
		{
			get
			{
				return this._FileShareOwners;
			}
			set
			{
				this._FileShareOwners.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FileShareAccesses(FileShareAccess entity)
		{
			this.SendPropertyChanging();
			entity.FileShare = this;
		}
		
		private void detach_FileShareAccesses(FileShareAccess entity)
		{
			this.SendPropertyChanging();
			entity.FileShare = null;
		}
		
		private void attach_FileShareOwners(FileShareOwner entity)
		{
			this.SendPropertyChanging();
			entity.FileShare = this;
		}
		
		private void detach_FileShareOwners(FileShareOwner entity)
		{
			this.SendPropertyChanging();
			entity.FileShare = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChangePhoneLog")]
	public partial class ChangePhoneLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Login;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _Phone;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    #endregion
		
		public ChangePhoneLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="NVarChar(1024)")]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this.OnLoginChanging(value);
					this.SendPropertyChanging();
					this._Login = value;
					this.SendPropertyChanged("Login");
					this.OnLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(1024)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EventLog")]
	public partial class EventLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _EventType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnEventTypeChanging(string value);
    partial void OnEventTypeChanged();
    #endregion
		
		public EventLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventType", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string EventType
		{
			get
			{
				return this._EventType;
			}
			set
			{
				if ((this._EventType != value))
				{
					this.OnEventTypeChanging(value);
					this.SendPropertyChanging();
					this._EventType = value;
					this.SendPropertyChanged("EventType");
					this.OnEventTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RequestTickets")]
	public partial class RequestTicket : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _serviceId;
		
		private string _secret;
		
		private string _ServiceType;
		
		private System.Nullable<System.DateTime> _RequestDate;
		
		private string _UTNLogin;
		
		private string _RequestStage;
		
		private string _sAMAccountName;
		
		private EntityRef<UserService> _UserService;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnserviceIdChanging(string value);
    partial void OnserviceIdChanged();
    partial void OnsecretChanging(string value);
    partial void OnsecretChanged();
    partial void OnServiceTypeChanging(string value);
    partial void OnServiceTypeChanged();
    partial void OnRequestDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRequestDateChanged();
    partial void OnUTNLoginChanging(string value);
    partial void OnUTNLoginChanged();
    partial void OnRequestStageChanging(string value);
    partial void OnRequestStageChanged();
    partial void OnsAMAccountNameChanging(string value);
    partial void OnsAMAccountNameChanged();
    #endregion
		
		public RequestTicket()
		{
			this._UserService = default(EntityRef<UserService>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serviceId", DbType="NVarChar(255)")]
		public string serviceId
		{
			get
			{
				return this._serviceId;
			}
			set
			{
				if ((this._serviceId != value))
				{
					if (this._UserService.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnserviceIdChanging(value);
					this.SendPropertyChanging();
					this._serviceId = value;
					this.SendPropertyChanged("serviceId");
					this.OnserviceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_secret", DbType="NVarChar(255)")]
		public string secret
		{
			get
			{
				return this._secret;
			}
			set
			{
				if ((this._secret != value))
				{
					this.OnsecretChanging(value);
					this.SendPropertyChanging();
					this._secret = value;
					this.SendPropertyChanged("secret");
					this.OnsecretChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceType", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string ServiceType
		{
			get
			{
				return this._ServiceType;
			}
			set
			{
				if ((this._ServiceType != value))
				{
					this.OnServiceTypeChanging(value);
					this.SendPropertyChanging();
					this._ServiceType = value;
					this.SendPropertyChanged("ServiceType");
					this.OnServiceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RequestDate
		{
			get
			{
				return this._RequestDate;
			}
			set
			{
				if ((this._RequestDate != value))
				{
					this.OnRequestDateChanging(value);
					this.SendPropertyChanging();
					this._RequestDate = value;
					this.SendPropertyChanged("RequestDate");
					this.OnRequestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UTNLogin", DbType="NVarChar(128)")]
		public string UTNLogin
		{
			get
			{
				return this._UTNLogin;
			}
			set
			{
				if ((this._UTNLogin != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUTNLoginChanging(value);
					this.SendPropertyChanging();
					this._UTNLogin = value;
					this.SendPropertyChanged("UTNLogin");
					this.OnUTNLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestStage", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string RequestStage
		{
			get
			{
				return this._RequestStage;
			}
			set
			{
				if ((this._RequestStage != value))
				{
					this.OnRequestStageChanging(value);
					this.SendPropertyChanging();
					this._RequestStage = value;
					this.SendPropertyChanged("RequestStage");
					this.OnRequestStageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sAMAccountName", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string sAMAccountName
		{
			get
			{
				return this._sAMAccountName;
			}
			set
			{
				if ((this._sAMAccountName != value))
				{
					this.OnsAMAccountNameChanging(value);
					this.SendPropertyChanging();
					this._sAMAccountName = value;
					this.SendPropertyChanged("sAMAccountName");
					this.OnsAMAccountNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserService_RequestTicket", Storage="_UserService", ThisKey="serviceId", OtherKey="Id", IsForeignKey=true)]
		public UserService UserService
		{
			get
			{
				return this._UserService.Entity;
			}
			set
			{
				UserService previousValue = this._UserService.Entity;
				if (((previousValue != value) 
							|| (this._UserService.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserService.Entity = null;
						previousValue.RequestTickets.Remove(this);
					}
					this._UserService.Entity = value;
					if ((value != null))
					{
						value.RequestTickets.Add(this);
						this._serviceId = value.Id;
					}
					else
					{
						this._serviceId = default(string);
					}
					this.SendPropertyChanged("UserService");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_RequestTicket", Storage="_User", ThisKey="UTNLogin", OtherKey="UTNLogin", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.RequestTickets.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.RequestTickets.Add(this);
						this._UTNLogin = value.UTNLogin;
					}
					else
					{
						this._UTNLogin = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UTNLogin;
		
		private string _FIO;
		
		private string _Email;
		
		private string _Post;
		
		private string _Domain;
		
		private string _FunctionalDepartment;
		
		private string _Location;
		
		private string _AccessKey;
		
		private System.Nullable<System.DateTime> _AccessKeyCreateTime;
		
		private EntitySet<RequestTicket> _RequestTickets;
		
		private EntitySet<AssignedService> _AssignedServices;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUTNLoginChanging(string value);
    partial void OnUTNLoginChanged();
    partial void OnFIOChanging(string value);
    partial void OnFIOChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPostChanging(string value);
    partial void OnPostChanged();
    partial void OnDomainChanging(string value);
    partial void OnDomainChanged();
    partial void OnFunctionalDepartmentChanging(string value);
    partial void OnFunctionalDepartmentChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnAccessKeyChanging(string value);
    partial void OnAccessKeyChanged();
    partial void OnAccessKeyCreateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAccessKeyCreateTimeChanged();
    #endregion
		
		public User()
		{
			this._RequestTickets = new EntitySet<RequestTicket>(new Action<RequestTicket>(this.attach_RequestTickets), new Action<RequestTicket>(this.detach_RequestTickets));
			this._AssignedServices = new EntitySet<AssignedService>(new Action<AssignedService>(this.attach_AssignedServices), new Action<AssignedService>(this.detach_AssignedServices));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UTNLogin", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UTNLogin
		{
			get
			{
				return this._UTNLogin;
			}
			set
			{
				if ((this._UTNLogin != value))
				{
					this.OnUTNLoginChanging(value);
					this.SendPropertyChanging();
					this._UTNLogin = value;
					this.SendPropertyChanged("UTNLogin");
					this.OnUTNLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FIO", DbType="NVarChar(1024)")]
		public string FIO
		{
			get
			{
				return this._FIO;
			}
			set
			{
				if ((this._FIO != value))
				{
					this.OnFIOChanging(value);
					this.SendPropertyChanging();
					this._FIO = value;
					this.SendPropertyChanged("FIO");
					this.OnFIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(1024)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Post", DbType="NVarChar(1024)")]
		public string Post
		{
			get
			{
				return this._Post;
			}
			set
			{
				if ((this._Post != value))
				{
					this.OnPostChanging(value);
					this.SendPropertyChanging();
					this._Post = value;
					this.SendPropertyChanged("Post");
					this.OnPostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Domain", DbType="NVarChar(1024)")]
		public string Domain
		{
			get
			{
				return this._Domain;
			}
			set
			{
				if ((this._Domain != value))
				{
					this.OnDomainChanging(value);
					this.SendPropertyChanging();
					this._Domain = value;
					this.SendPropertyChanged("Domain");
					this.OnDomainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctionalDepartment", DbType="NVarChar(1024)")]
		public string FunctionalDepartment
		{
			get
			{
				return this._FunctionalDepartment;
			}
			set
			{
				if ((this._FunctionalDepartment != value))
				{
					this.OnFunctionalDepartmentChanging(value);
					this.SendPropertyChanging();
					this._FunctionalDepartment = value;
					this.SendPropertyChanged("FunctionalDepartment");
					this.OnFunctionalDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(1024)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessKey", DbType="NVarChar(255)")]
		public string AccessKey
		{
			get
			{
				return this._AccessKey;
			}
			set
			{
				if ((this._AccessKey != value))
				{
					this.OnAccessKeyChanging(value);
					this.SendPropertyChanging();
					this._AccessKey = value;
					this.SendPropertyChanged("AccessKey");
					this.OnAccessKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessKeyCreateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> AccessKeyCreateTime
		{
			get
			{
				return this._AccessKeyCreateTime;
			}
			set
			{
				if ((this._AccessKeyCreateTime != value))
				{
					this.OnAccessKeyCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._AccessKeyCreateTime = value;
					this.SendPropertyChanged("AccessKeyCreateTime");
					this.OnAccessKeyCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_RequestTicket", Storage="_RequestTickets", ThisKey="UTNLogin", OtherKey="UTNLogin")]
		public EntitySet<RequestTicket> RequestTickets
		{
			get
			{
				return this._RequestTickets;
			}
			set
			{
				this._RequestTickets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_AssignedService", Storage="_AssignedServices", ThisKey="UTNLogin", OtherKey="UTNLogin")]
		public EntitySet<AssignedService> AssignedServices
		{
			get
			{
				return this._AssignedServices;
			}
			set
			{
				this._AssignedServices.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RequestTickets(RequestTicket entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_RequestTickets(RequestTicket entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_AssignedServices(AssignedService entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_AssignedServices(AssignedService entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AssignedService")]
	public partial class AssignedService1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ServiceId;
		
		private System.Nullable<int> _UserId;
		
		private string _ITApprovedBy;
		
		private System.Nullable<bool> _ITApproved;
		
		private string _OwnerApprovedBy;
		
		private System.Nullable<bool> _OwnerApproved;
		
		private System.Nullable<bool> _UserClaimed;
		
		private System.Nullable<bool> _TechnicalResponsibleApproved;
		
		private string _TechnicalResponsibleApprovedBy;
		
		private string _UTNLogin;
		
		private EntityRef<UserService> _UserService;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnServiceIdChanging(string value);
    partial void OnServiceIdChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnITApprovedByChanging(string value);
    partial void OnITApprovedByChanged();
    partial void OnITApprovedChanging(System.Nullable<bool> value);
    partial void OnITApprovedChanged();
    partial void OnOwnerApprovedByChanging(string value);
    partial void OnOwnerApprovedByChanged();
    partial void OnOwnerApprovedChanging(System.Nullable<bool> value);
    partial void OnOwnerApprovedChanged();
    partial void OnUserClaimedChanging(System.Nullable<bool> value);
    partial void OnUserClaimedChanged();
    partial void OnTechnicalResponsibleApprovedChanging(System.Nullable<bool> value);
    partial void OnTechnicalResponsibleApprovedChanged();
    partial void OnTechnicalResponsibleApprovedByChanging(string value);
    partial void OnTechnicalResponsibleApprovedByChanged();
    partial void OnUTNLoginChanging(string value);
    partial void OnUTNLoginChanged();
    #endregion
		
		public AssignedService1()
		{
			this._UserService = default(EntityRef<UserService>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceId", DbType="NVarChar(255)")]
		public string ServiceId
		{
			get
			{
				return this._ServiceId;
			}
			set
			{
				if ((this._ServiceId != value))
				{
					if (this._UserService.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIdChanging(value);
					this.SendPropertyChanging();
					this._ServiceId = value;
					this.SendPropertyChanged("ServiceId");
					this.OnServiceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ITApprovedBy", DbType="NVarChar(255)")]
		public string ITApprovedBy
		{
			get
			{
				return this._ITApprovedBy;
			}
			set
			{
				if ((this._ITApprovedBy != value))
				{
					this.OnITApprovedByChanging(value);
					this.SendPropertyChanging();
					this._ITApprovedBy = value;
					this.SendPropertyChanged("ITApprovedBy");
					this.OnITApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ITApproved", DbType="Bit")]
		public System.Nullable<bool> ITApproved
		{
			get
			{
				return this._ITApproved;
			}
			set
			{
				if ((this._ITApproved != value))
				{
					this.OnITApprovedChanging(value);
					this.SendPropertyChanging();
					this._ITApproved = value;
					this.SendPropertyChanged("ITApproved");
					this.OnITApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerApprovedBy", DbType="NVarChar(255)")]
		public string OwnerApprovedBy
		{
			get
			{
				return this._OwnerApprovedBy;
			}
			set
			{
				if ((this._OwnerApprovedBy != value))
				{
					this.OnOwnerApprovedByChanging(value);
					this.SendPropertyChanging();
					this._OwnerApprovedBy = value;
					this.SendPropertyChanged("OwnerApprovedBy");
					this.OnOwnerApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerApproved", DbType="Bit")]
		public System.Nullable<bool> OwnerApproved
		{
			get
			{
				return this._OwnerApproved;
			}
			set
			{
				if ((this._OwnerApproved != value))
				{
					this.OnOwnerApprovedChanging(value);
					this.SendPropertyChanging();
					this._OwnerApproved = value;
					this.SendPropertyChanged("OwnerApproved");
					this.OnOwnerApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserClaimed", DbType="Bit")]
		public System.Nullable<bool> UserClaimed
		{
			get
			{
				return this._UserClaimed;
			}
			set
			{
				if ((this._UserClaimed != value))
				{
					this.OnUserClaimedChanging(value);
					this.SendPropertyChanging();
					this._UserClaimed = value;
					this.SendPropertyChanged("UserClaimed");
					this.OnUserClaimedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TechnicalResponsibleApproved", DbType="Bit")]
		public System.Nullable<bool> TechnicalResponsibleApproved
		{
			get
			{
				return this._TechnicalResponsibleApproved;
			}
			set
			{
				if ((this._TechnicalResponsibleApproved != value))
				{
					this.OnTechnicalResponsibleApprovedChanging(value);
					this.SendPropertyChanging();
					this._TechnicalResponsibleApproved = value;
					this.SendPropertyChanged("TechnicalResponsibleApproved");
					this.OnTechnicalResponsibleApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TechnicalResponsibleApprovedBy", DbType="NVarChar(255)")]
		public string TechnicalResponsibleApprovedBy
		{
			get
			{
				return this._TechnicalResponsibleApprovedBy;
			}
			set
			{
				if ((this._TechnicalResponsibleApprovedBy != value))
				{
					this.OnTechnicalResponsibleApprovedByChanging(value);
					this.SendPropertyChanging();
					this._TechnicalResponsibleApprovedBy = value;
					this.SendPropertyChanged("TechnicalResponsibleApprovedBy");
					this.OnTechnicalResponsibleApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UTNLogin", DbType="NVarChar(128)")]
		public string UTNLogin
		{
			get
			{
				return this._UTNLogin;
			}
			set
			{
				if ((this._UTNLogin != value))
				{
					this.OnUTNLoginChanging(value);
					this.SendPropertyChanging();
					this._UTNLogin = value;
					this.SendPropertyChanged("UTNLogin");
					this.OnUTNLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserService_AssignedService1", Storage="_UserService", ThisKey="ServiceId", OtherKey="Id", IsForeignKey=true)]
		public UserService UserService
		{
			get
			{
				return this._UserService.Entity;
			}
			set
			{
				UserService previousValue = this._UserService.Entity;
				if (((previousValue != value) 
							|| (this._UserService.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserService.Entity = null;
						previousValue.AssignedService1s.Remove(this);
					}
					this._UserService.Entity = value;
					if ((value != null))
					{
						value.AssignedService1s.Add(this);
						this._ServiceId = value.Id;
					}
					else
					{
						this._ServiceId = default(string);
					}
					this.SendPropertyChanged("UserService");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AssignedService")]
	public partial class AssignedService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ServiceId;
		
		private System.Nullable<int> _UserId;
		
		private string _ITApprovedBy;
		
		private System.Nullable<bool> _ITApproved;
		
		private string _OwnerApprovedBy;
		
		private System.Nullable<bool> _OwnerApproved;
		
		private System.Nullable<bool> _UserClaimed;
		
		private System.Nullable<bool> _TechnicalResponsibleApproved;
		
		private string _TechnicalResponsibleApprovedBy;
		
		private string _UTNLogin;
		
		private EntityRef<User> _User;
		
		private EntityRef<UserService> _UserService;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnServiceIdChanging(string value);
    partial void OnServiceIdChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnITApprovedByChanging(string value);
    partial void OnITApprovedByChanged();
    partial void OnITApprovedChanging(System.Nullable<bool> value);
    partial void OnITApprovedChanged();
    partial void OnOwnerApprovedByChanging(string value);
    partial void OnOwnerApprovedByChanged();
    partial void OnOwnerApprovedChanging(System.Nullable<bool> value);
    partial void OnOwnerApprovedChanged();
    partial void OnUserClaimedChanging(System.Nullable<bool> value);
    partial void OnUserClaimedChanged();
    partial void OnTechnicalResponsibleApprovedChanging(System.Nullable<bool> value);
    partial void OnTechnicalResponsibleApprovedChanged();
    partial void OnTechnicalResponsibleApprovedByChanging(string value);
    partial void OnTechnicalResponsibleApprovedByChanged();
    partial void OnUTNLoginChanging(string value);
    partial void OnUTNLoginChanged();
    #endregion
		
		public AssignedService()
		{
			this._User = default(EntityRef<User>);
			this._UserService = default(EntityRef<UserService>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceId", DbType="NVarChar(255)")]
		public string ServiceId
		{
			get
			{
				return this._ServiceId;
			}
			set
			{
				if ((this._ServiceId != value))
				{
					if (this._UserService.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIdChanging(value);
					this.SendPropertyChanging();
					this._ServiceId = value;
					this.SendPropertyChanged("ServiceId");
					this.OnServiceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ITApprovedBy", DbType="NVarChar(255)")]
		public string ITApprovedBy
		{
			get
			{
				return this._ITApprovedBy;
			}
			set
			{
				if ((this._ITApprovedBy != value))
				{
					this.OnITApprovedByChanging(value);
					this.SendPropertyChanging();
					this._ITApprovedBy = value;
					this.SendPropertyChanged("ITApprovedBy");
					this.OnITApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ITApproved", DbType="Bit")]
		public System.Nullable<bool> ITApproved
		{
			get
			{
				return this._ITApproved;
			}
			set
			{
				if ((this._ITApproved != value))
				{
					this.OnITApprovedChanging(value);
					this.SendPropertyChanging();
					this._ITApproved = value;
					this.SendPropertyChanged("ITApproved");
					this.OnITApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerApprovedBy", DbType="NVarChar(255)")]
		public string OwnerApprovedBy
		{
			get
			{
				return this._OwnerApprovedBy;
			}
			set
			{
				if ((this._OwnerApprovedBy != value))
				{
					this.OnOwnerApprovedByChanging(value);
					this.SendPropertyChanging();
					this._OwnerApprovedBy = value;
					this.SendPropertyChanged("OwnerApprovedBy");
					this.OnOwnerApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerApproved", DbType="Bit")]
		public System.Nullable<bool> OwnerApproved
		{
			get
			{
				return this._OwnerApproved;
			}
			set
			{
				if ((this._OwnerApproved != value))
				{
					this.OnOwnerApprovedChanging(value);
					this.SendPropertyChanging();
					this._OwnerApproved = value;
					this.SendPropertyChanged("OwnerApproved");
					this.OnOwnerApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserClaimed", DbType="Bit")]
		public System.Nullable<bool> UserClaimed
		{
			get
			{
				return this._UserClaimed;
			}
			set
			{
				if ((this._UserClaimed != value))
				{
					this.OnUserClaimedChanging(value);
					this.SendPropertyChanging();
					this._UserClaimed = value;
					this.SendPropertyChanged("UserClaimed");
					this.OnUserClaimedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TechnicalResponsibleApproved", DbType="Bit")]
		public System.Nullable<bool> TechnicalResponsibleApproved
		{
			get
			{
				return this._TechnicalResponsibleApproved;
			}
			set
			{
				if ((this._TechnicalResponsibleApproved != value))
				{
					this.OnTechnicalResponsibleApprovedChanging(value);
					this.SendPropertyChanging();
					this._TechnicalResponsibleApproved = value;
					this.SendPropertyChanged("TechnicalResponsibleApproved");
					this.OnTechnicalResponsibleApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TechnicalResponsibleApprovedBy", DbType="NVarChar(255)")]
		public string TechnicalResponsibleApprovedBy
		{
			get
			{
				return this._TechnicalResponsibleApprovedBy;
			}
			set
			{
				if ((this._TechnicalResponsibleApprovedBy != value))
				{
					this.OnTechnicalResponsibleApprovedByChanging(value);
					this.SendPropertyChanging();
					this._TechnicalResponsibleApprovedBy = value;
					this.SendPropertyChanged("TechnicalResponsibleApprovedBy");
					this.OnTechnicalResponsibleApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UTNLogin", DbType="NVarChar(128)")]
		public string UTNLogin
		{
			get
			{
				return this._UTNLogin;
			}
			set
			{
				if ((this._UTNLogin != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUTNLoginChanging(value);
					this.SendPropertyChanging();
					this._UTNLogin = value;
					this.SendPropertyChanged("UTNLogin");
					this.OnUTNLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_AssignedService", Storage="_User", ThisKey="UTNLogin", OtherKey="UTNLogin", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.AssignedServices.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.AssignedServices.Add(this);
						this._UTNLogin = value.UTNLogin;
					}
					else
					{
						this._UTNLogin = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserService_AssignedService", Storage="_UserService", ThisKey="ServiceId", OtherKey="Id", IsForeignKey=true)]
		public UserService UserService
		{
			get
			{
				return this._UserService.Entity;
			}
			set
			{
				UserService previousValue = this._UserService.Entity;
				if (((previousValue != value) 
							|| (this._UserService.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserService.Entity = null;
						previousValue.AssignedServices.Remove(this);
					}
					this._UserService.Entity = value;
					if ((value != null))
					{
						value.AssignedServices.Add(this);
						this._ServiceId = value.Id;
					}
					else
					{
						this._ServiceId = default(string);
					}
					this.SendPropertyChanged("UserService");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LogSiteAccess")]
	public partial class LogSiteAccess : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _IP;
		
		private string _URI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnIPChanging(string value);
    partial void OnIPChanged();
    partial void OnURIChanging(string value);
    partial void OnURIChanged();
    #endregion
		
		public LogSiteAccess()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IP", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string IP
		{
			get
			{
				return this._IP;
			}
			set
			{
				if ((this._IP != value))
				{
					this.OnIPChanging(value);
					this.SendPropertyChanging();
					this._IP = value;
					this.SendPropertyChanged("IP");
					this.OnIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URI", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string URI
		{
			get
			{
				return this._URI;
			}
			set
			{
				if ((this._URI != value))
				{
					this.OnURIChanging(value);
					this.SendPropertyChanging();
					this._URI = value;
					this.SendPropertyChanged("URI");
					this.OnURIChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Acceptors")]
	public partial class Acceptor
	{
		
		private string _serviceId;
		
		private string _poolname;
		
		private string _username;
		
		private string _acceptSequense;
		
		private string _serviceDomain;
		
		public Acceptor()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serviceId", DbType="NVarChar(255)")]
		public string serviceId
		{
			get
			{
				return this._serviceId;
			}
			set
			{
				if ((this._serviceId != value))
				{
					this._serviceId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_poolname", DbType="NVarChar(255)")]
		public string poolname
		{
			get
			{
				return this._poolname;
			}
			set
			{
				if ((this._poolname != value))
				{
					this._poolname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(255)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this._username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_acceptSequense", DbType="NVarChar(255)")]
		public string acceptSequense
		{
			get
			{
				return this._acceptSequense;
			}
			set
			{
				if ((this._acceptSequense != value))
				{
					this._acceptSequense = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serviceDomain", DbType="NVarChar(255)")]
		public string serviceDomain
		{
			get
			{
				return this._serviceDomain;
			}
			set
			{
				if ((this._serviceDomain != value))
				{
					this._serviceDomain = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Networks")]
	public partial class Network
	{
		
		private string _network1;
		
		private string _department;
		
		private string _filial;
		
		public Network()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="network", Storage="_network1", DbType="NVarChar(255)")]
		public string network1
		{
			get
			{
				return this._network1;
			}
			set
			{
				if ((this._network1 != value))
				{
					this._network1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_department", DbType="NVarChar(255)")]
		public string department
		{
			get
			{
				return this._department;
			}
			set
			{
				if ((this._department != value))
				{
					this._department = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_filial", DbType="NVarChar(255)")]
		public string filial
		{
			get
			{
				return this._filial;
			}
			set
			{
				if ((this._filial != value))
				{
					this._filial = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Printers")]
	public partial class Printer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _LoginId;
		
		private string _Name;
		
		private string _Default;
		
		private string _Network;
		
		private string _Server;
		
		private string _ShareName;
		
		private EntityRef<Login> _Login;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLoginIdChanging(System.Nullable<int> value);
    partial void OnLoginIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDefaultChanging(string value);
    partial void OnDefaultChanged();
    partial void OnNetworkChanging(string value);
    partial void OnNetworkChanged();
    partial void OnServerChanging(string value);
    partial void OnServerChanged();
    partial void OnShareNameChanging(string value);
    partial void OnShareNameChanged();
    #endregion
		
		public Printer()
		{
			this._Login = default(EntityRef<Login>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginId", DbType="Int")]
		public System.Nullable<int> LoginId
		{
			get
			{
				return this._LoginId;
			}
			set
			{
				if ((this._LoginId != value))
				{
					if (this._Login.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoginIdChanging(value);
					this.SendPropertyChanging();
					this._LoginId = value;
					this.SendPropertyChanged("LoginId");
					this.OnLoginIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(1024)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Default]", Storage="_Default", DbType="NVarChar(1024)")]
		public string Default
		{
			get
			{
				return this._Default;
			}
			set
			{
				if ((this._Default != value))
				{
					this.OnDefaultChanging(value);
					this.SendPropertyChanging();
					this._Default = value;
					this.SendPropertyChanged("Default");
					this.OnDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Network", DbType="NVarChar(1024)")]
		public string Network
		{
			get
			{
				return this._Network;
			}
			set
			{
				if ((this._Network != value))
				{
					this.OnNetworkChanging(value);
					this.SendPropertyChanging();
					this._Network = value;
					this.SendPropertyChanged("Network");
					this.OnNetworkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Server", DbType="NVarChar(1024)")]
		public string Server
		{
			get
			{
				return this._Server;
			}
			set
			{
				if ((this._Server != value))
				{
					this.OnServerChanging(value);
					this.SendPropertyChanging();
					this._Server = value;
					this.SendPropertyChanged("Server");
					this.OnServerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShareName", DbType="NVarChar(1024)")]
		public string ShareName
		{
			get
			{
				return this._ShareName;
			}
			set
			{
				if ((this._ShareName != value))
				{
					this.OnShareNameChanging(value);
					this.SendPropertyChanging();
					this._ShareName = value;
					this.SendPropertyChanged("ShareName");
					this.OnShareNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_Printer", Storage="_Login", ThisKey="LoginId", OtherKey="Id", IsForeignKey=true)]
		public Login Login
		{
			get
			{
				return this._Login.Entity;
			}
			set
			{
				Login previousValue = this._Login.Entity;
				if (((previousValue != value) 
							|| (this._Login.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Login.Entity = null;
						previousValue.Printers.Remove(this);
					}
					this._Login.Entity = value;
					if ((value != null))
					{
						value.Printers.Add(this);
						this._LoginId = value.Id;
					}
					else
					{
						this._LoginId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Login");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DiskDrives")]
	public partial class DiskDrive : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Interface;
		
		private System.Nullable<int> _Size;
		
		private string _Name;
		
		private System.Nullable<int> _LoginId;
		
		private EntitySet<LogicalDisk> _LogicalDisks;
		
		private EntityRef<Login> _Login;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnInterfaceChanging(string value);
    partial void OnInterfaceChanged();
    partial void OnSizeChanging(System.Nullable<int> value);
    partial void OnSizeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLoginIdChanging(System.Nullable<int> value);
    partial void OnLoginIdChanged();
    #endregion
		
		public DiskDrive()
		{
			this._LogicalDisks = new EntitySet<LogicalDisk>(new Action<LogicalDisk>(this.attach_LogicalDisks), new Action<LogicalDisk>(this.detach_LogicalDisks));
			this._Login = default(EntityRef<Login>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Interface", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Interface
		{
			get
			{
				return this._Interface;
			}
			set
			{
				if ((this._Interface != value))
				{
					this.OnInterfaceChanging(value);
					this.SendPropertyChanging();
					this._Interface = value;
					this.SendPropertyChanged("Interface");
					this.OnInterfaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="Int")]
		public System.Nullable<int> Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginId", DbType="Int")]
		public System.Nullable<int> LoginId
		{
			get
			{
				return this._LoginId;
			}
			set
			{
				if ((this._LoginId != value))
				{
					if (this._Login.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoginIdChanging(value);
					this.SendPropertyChanging();
					this._LoginId = value;
					this.SendPropertyChanged("LoginId");
					this.OnLoginIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DiskDrive_LogicalDisk", Storage="_LogicalDisks", ThisKey="Id", OtherKey="DriveId")]
		public EntitySet<LogicalDisk> LogicalDisks
		{
			get
			{
				return this._LogicalDisks;
			}
			set
			{
				this._LogicalDisks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_DiskDrive", Storage="_Login", ThisKey="LoginId", OtherKey="Id", IsForeignKey=true)]
		public Login Login
		{
			get
			{
				return this._Login.Entity;
			}
			set
			{
				Login previousValue = this._Login.Entity;
				if (((previousValue != value) 
							|| (this._Login.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Login.Entity = null;
						previousValue.DiskDrives.Remove(this);
					}
					this._Login.Entity = value;
					if ((value != null))
					{
						value.DiskDrives.Add(this);
						this._LoginId = value.Id;
					}
					else
					{
						this._LoginId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Login");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LogicalDisks(LogicalDisk entity)
		{
			this.SendPropertyChanging();
			entity.DiskDrive = this;
		}
		
		private void detach_LogicalDisks(LogicalDisk entity)
		{
			this.SendPropertyChanging();
			entity.DiskDrive = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LogicalDisks")]
	public partial class LogicalDisk : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Label;
		
		private System.Nullable<int> _Free;
		
		private System.Nullable<int> _Size;
		
		private System.Nullable<int> _DriveId;
		
		private EntityRef<DiskDrive> _DiskDrive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLabelChanging(string value);
    partial void OnLabelChanged();
    partial void OnFreeChanging(System.Nullable<int> value);
    partial void OnFreeChanged();
    partial void OnSizeChanging(System.Nullable<int> value);
    partial void OnSizeChanged();
    partial void OnDriveIdChanging(System.Nullable<int> value);
    partial void OnDriveIdChanged();
    #endregion
		
		public LogicalDisk()
		{
			this._DiskDrive = default(EntityRef<DiskDrive>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Label", DbType="NVarChar(1024)")]
		public string Label
		{
			get
			{
				return this._Label;
			}
			set
			{
				if ((this._Label != value))
				{
					this.OnLabelChanging(value);
					this.SendPropertyChanging();
					this._Label = value;
					this.SendPropertyChanged("Label");
					this.OnLabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Free", DbType="Int")]
		public System.Nullable<int> Free
		{
			get
			{
				return this._Free;
			}
			set
			{
				if ((this._Free != value))
				{
					this.OnFreeChanging(value);
					this.SendPropertyChanging();
					this._Free = value;
					this.SendPropertyChanged("Free");
					this.OnFreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="Int")]
		public System.Nullable<int> Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DriveId", DbType="Int")]
		public System.Nullable<int> DriveId
		{
			get
			{
				return this._DriveId;
			}
			set
			{
				if ((this._DriveId != value))
				{
					if (this._DiskDrive.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDriveIdChanging(value);
					this.SendPropertyChanging();
					this._DriveId = value;
					this.SendPropertyChanged("DriveId");
					this.OnDriveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DiskDrive_LogicalDisk", Storage="_DiskDrive", ThisKey="DriveId", OtherKey="Id", IsForeignKey=true)]
		public DiskDrive DiskDrive
		{
			get
			{
				return this._DiskDrive.Entity;
			}
			set
			{
				DiskDrive previousValue = this._DiskDrive.Entity;
				if (((previousValue != value) 
							|| (this._DiskDrive.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DiskDrive.Entity = null;
						previousValue.LogicalDisks.Remove(this);
					}
					this._DiskDrive.Entity = value;
					if ((value != null))
					{
						value.LogicalDisks.Add(this);
						this._DriveId = value.Id;
					}
					else
					{
						this._DriveId = default(Nullable<int>);
					}
					this.SendPropertyChanged("DiskDrive");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mail")]
	public partial class Mail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _lable;
		
		private System.Nullable<int> _eml;
		
		private System.Nullable<int> _dbx;
		
		private System.Nullable<int> _LoginId;
		
		private EntityRef<Login> _Login;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnlableChanging(string value);
    partial void OnlableChanged();
    partial void OnemlChanging(System.Nullable<int> value);
    partial void OnemlChanged();
    partial void OndbxChanging(System.Nullable<int> value);
    partial void OndbxChanged();
    partial void OnLoginIdChanging(System.Nullable<int> value);
    partial void OnLoginIdChanged();
    #endregion
		
		public Mail()
		{
			this._Login = default(EntityRef<Login>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lable", DbType="NVarChar(1024)")]
		public string lable
		{
			get
			{
				return this._lable;
			}
			set
			{
				if ((this._lable != value))
				{
					this.OnlableChanging(value);
					this.SendPropertyChanging();
					this._lable = value;
					this.SendPropertyChanged("lable");
					this.OnlableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eml", DbType="Int")]
		public System.Nullable<int> eml
		{
			get
			{
				return this._eml;
			}
			set
			{
				if ((this._eml != value))
				{
					this.OnemlChanging(value);
					this.SendPropertyChanging();
					this._eml = value;
					this.SendPropertyChanged("eml");
					this.OnemlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dbx", DbType="Int")]
		public System.Nullable<int> dbx
		{
			get
			{
				return this._dbx;
			}
			set
			{
				if ((this._dbx != value))
				{
					this.OndbxChanging(value);
					this.SendPropertyChanging();
					this._dbx = value;
					this.SendPropertyChanged("dbx");
					this.OndbxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginId", DbType="Int")]
		public System.Nullable<int> LoginId
		{
			get
			{
				return this._LoginId;
			}
			set
			{
				if ((this._LoginId != value))
				{
					if (this._Login.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoginIdChanging(value);
					this.SendPropertyChanging();
					this._LoginId = value;
					this.SendPropertyChanged("LoginId");
					this.OnLoginIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_Mail", Storage="_Login", ThisKey="LoginId", OtherKey="Id", IsForeignKey=true)]
		public Login Login
		{
			get
			{
				return this._Login.Entity;
			}
			set
			{
				Login previousValue = this._Login.Entity;
				if (((previousValue != value) 
							|| (this._Login.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Login.Entity = null;
						previousValue.Mails.Remove(this);
					}
					this._Login.Entity = value;
					if ((value != null))
					{
						value.Mails.Add(this);
						this._LoginId = value.Id;
					}
					else
					{
						this._LoginId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Login");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Logins")]
	public partial class Login : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _sAMAccountName;
		
		private string _IPAddress;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _OsVersion;
		
		private string _Post;
		
		private string _Email;
		
		private string _Phone;
		
		private string _Mobile;
		
		private string _FIO;
		
		private System.Nullable<bool> _DameWare;
		
		private string _osarch;
		
		private string _CPU_name;
		
		private string _GPU_NAME;
		
		private string _errors;
		
		private System.Nullable<int> _RAM;
		
		private System.Nullable<int> _CPU_freq;
		
		private System.Nullable<int> _GPU_RAM;
		
		private System.Nullable<int> _GPU_HR;
		
		private System.Nullable<int> _GPU_VR;
		
		private string _CompName;
		
		private System.Nullable<int> _TotalHDDSize;
		
		private System.Nullable<int> _TotalFreeSize;
		
		private System.Nullable<int> _DriveCount;
		
		private string _DriveInterfaces;
		
		private string _DefaultPrinterName;
		
		private System.Nullable<int> _MailBoxSize;
		
		private System.Nullable<int> _ProfileSize;
		
		private string _ProfileName;
		
		private System.Nullable<int> _TotalMailSize;
		
		private EntitySet<Printer> _Printers;
		
		private EntitySet<DiskDrive> _DiskDrives;
		
		private EntitySet<Mail> _Mails;
		
		private EntitySet<UserFile> _UserFiles;
		
		private EntitySet<UserProgram> _UserPrograms;
		
		private EntitySet<OdinC> _OdinCs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnsAMAccountNameChanging(string value);
    partial void OnsAMAccountNameChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnOsVersionChanging(string value);
    partial void OnOsVersionChanged();
    partial void OnPostChanging(string value);
    partial void OnPostChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnFIOChanging(string value);
    partial void OnFIOChanged();
    partial void OnDameWareChanging(System.Nullable<bool> value);
    partial void OnDameWareChanged();
    partial void OnosarchChanging(string value);
    partial void OnosarchChanged();
    partial void OnCPU_nameChanging(string value);
    partial void OnCPU_nameChanged();
    partial void OnGPU_NAMEChanging(string value);
    partial void OnGPU_NAMEChanged();
    partial void OnerrorsChanging(string value);
    partial void OnerrorsChanged();
    partial void OnRAMChanging(System.Nullable<int> value);
    partial void OnRAMChanged();
    partial void OnCPU_freqChanging(System.Nullable<int> value);
    partial void OnCPU_freqChanged();
    partial void OnGPU_RAMChanging(System.Nullable<int> value);
    partial void OnGPU_RAMChanged();
    partial void OnGPU_HRChanging(System.Nullable<int> value);
    partial void OnGPU_HRChanged();
    partial void OnGPU_VRChanging(System.Nullable<int> value);
    partial void OnGPU_VRChanged();
    partial void OnCompNameChanging(string value);
    partial void OnCompNameChanged();
    partial void OnTotalHDDSizeChanging(System.Nullable<int> value);
    partial void OnTotalHDDSizeChanged();
    partial void OnTotalFreeSizeChanging(System.Nullable<int> value);
    partial void OnTotalFreeSizeChanged();
    partial void OnDriveCountChanging(System.Nullable<int> value);
    partial void OnDriveCountChanged();
    partial void OnDriveInterfacesChanging(string value);
    partial void OnDriveInterfacesChanged();
    partial void OnDefaultPrinterNameChanging(string value);
    partial void OnDefaultPrinterNameChanged();
    partial void OnMailBoxSizeChanging(System.Nullable<int> value);
    partial void OnMailBoxSizeChanged();
    partial void OnProfileSizeChanging(System.Nullable<int> value);
    partial void OnProfileSizeChanged();
    partial void OnProfileNameChanging(string value);
    partial void OnProfileNameChanged();
    partial void OnTotalMailSizeChanging(System.Nullable<int> value);
    partial void OnTotalMailSizeChanged();
    #endregion
		
		public Login()
		{
			this._Printers = new EntitySet<Printer>(new Action<Printer>(this.attach_Printers), new Action<Printer>(this.detach_Printers));
			this._DiskDrives = new EntitySet<DiskDrive>(new Action<DiskDrive>(this.attach_DiskDrives), new Action<DiskDrive>(this.detach_DiskDrives));
			this._Mails = new EntitySet<Mail>(new Action<Mail>(this.attach_Mails), new Action<Mail>(this.detach_Mails));
			this._UserFiles = new EntitySet<UserFile>(new Action<UserFile>(this.attach_UserFiles), new Action<UserFile>(this.detach_UserFiles));
			this._UserPrograms = new EntitySet<UserProgram>(new Action<UserProgram>(this.attach_UserPrograms), new Action<UserProgram>(this.detach_UserPrograms));
			this._OdinCs = new EntitySet<OdinC>(new Action<OdinC>(this.attach_OdinCs), new Action<OdinC>(this.detach_OdinCs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sAMAccountName", DbType="NVarChar(255)")]
		public string sAMAccountName
		{
			get
			{
				return this._sAMAccountName;
			}
			set
			{
				if ((this._sAMAccountName != value))
				{
					this.OnsAMAccountNameChanging(value);
					this.SendPropertyChanging();
					this._sAMAccountName = value;
					this.SendPropertyChanged("sAMAccountName");
					this.OnsAMAccountNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="NVarChar(255)")]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OsVersion", DbType="NVarChar(255)")]
		public string OsVersion
		{
			get
			{
				return this._OsVersion;
			}
			set
			{
				if ((this._OsVersion != value))
				{
					this.OnOsVersionChanging(value);
					this.SendPropertyChanging();
					this._OsVersion = value;
					this.SendPropertyChanged("OsVersion");
					this.OnOsVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Post", DbType="NVarChar(255)")]
		public string Post
		{
			get
			{
				return this._Post;
			}
			set
			{
				if ((this._Post != value))
				{
					this.OnPostChanging(value);
					this.SendPropertyChanging();
					this._Post = value;
					this.SendPropertyChanged("Post");
					this.OnPostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(255)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(255)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(255)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FIO", DbType="NVarChar(1024)")]
		public string FIO
		{
			get
			{
				return this._FIO;
			}
			set
			{
				if ((this._FIO != value))
				{
					this.OnFIOChanging(value);
					this.SendPropertyChanging();
					this._FIO = value;
					this.SendPropertyChanged("FIO");
					this.OnFIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DameWare", DbType="Bit")]
		public System.Nullable<bool> DameWare
		{
			get
			{
				return this._DameWare;
			}
			set
			{
				if ((this._DameWare != value))
				{
					this.OnDameWareChanging(value);
					this.SendPropertyChanging();
					this._DameWare = value;
					this.SendPropertyChanged("DameWare");
					this.OnDameWareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_osarch", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string osarch
		{
			get
			{
				return this._osarch;
			}
			set
			{
				if ((this._osarch != value))
				{
					this.OnosarchChanging(value);
					this.SendPropertyChanging();
					this._osarch = value;
					this.SendPropertyChanged("osarch");
					this.OnosarchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPU_name", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string CPU_name
		{
			get
			{
				return this._CPU_name;
			}
			set
			{
				if ((this._CPU_name != value))
				{
					this.OnCPU_nameChanging(value);
					this.SendPropertyChanging();
					this._CPU_name = value;
					this.SendPropertyChanged("CPU_name");
					this.OnCPU_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GPU_NAME", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string GPU_NAME
		{
			get
			{
				return this._GPU_NAME;
			}
			set
			{
				if ((this._GPU_NAME != value))
				{
					this.OnGPU_NAMEChanging(value);
					this.SendPropertyChanging();
					this._GPU_NAME = value;
					this.SendPropertyChanged("GPU_NAME");
					this.OnGPU_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_errors", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string errors
		{
			get
			{
				return this._errors;
			}
			set
			{
				if ((this._errors != value))
				{
					this.OnerrorsChanging(value);
					this.SendPropertyChanging();
					this._errors = value;
					this.SendPropertyChanged("errors");
					this.OnerrorsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RAM", DbType="Int")]
		public System.Nullable<int> RAM
		{
			get
			{
				return this._RAM;
			}
			set
			{
				if ((this._RAM != value))
				{
					this.OnRAMChanging(value);
					this.SendPropertyChanging();
					this._RAM = value;
					this.SendPropertyChanged("RAM");
					this.OnRAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPU_freq", DbType="Int")]
		public System.Nullable<int> CPU_freq
		{
			get
			{
				return this._CPU_freq;
			}
			set
			{
				if ((this._CPU_freq != value))
				{
					this.OnCPU_freqChanging(value);
					this.SendPropertyChanging();
					this._CPU_freq = value;
					this.SendPropertyChanged("CPU_freq");
					this.OnCPU_freqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GPU_RAM", DbType="Int")]
		public System.Nullable<int> GPU_RAM
		{
			get
			{
				return this._GPU_RAM;
			}
			set
			{
				if ((this._GPU_RAM != value))
				{
					this.OnGPU_RAMChanging(value);
					this.SendPropertyChanging();
					this._GPU_RAM = value;
					this.SendPropertyChanged("GPU_RAM");
					this.OnGPU_RAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GPU_HR", DbType="Int")]
		public System.Nullable<int> GPU_HR
		{
			get
			{
				return this._GPU_HR;
			}
			set
			{
				if ((this._GPU_HR != value))
				{
					this.OnGPU_HRChanging(value);
					this.SendPropertyChanging();
					this._GPU_HR = value;
					this.SendPropertyChanged("GPU_HR");
					this.OnGPU_HRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GPU_VR", DbType="Int")]
		public System.Nullable<int> GPU_VR
		{
			get
			{
				return this._GPU_VR;
			}
			set
			{
				if ((this._GPU_VR != value))
				{
					this.OnGPU_VRChanging(value);
					this.SendPropertyChanging();
					this._GPU_VR = value;
					this.SendPropertyChanged("GPU_VR");
					this.OnGPU_VRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompName", DbType="NVarChar(1024)")]
		public string CompName
		{
			get
			{
				return this._CompName;
			}
			set
			{
				if ((this._CompName != value))
				{
					this.OnCompNameChanging(value);
					this.SendPropertyChanging();
					this._CompName = value;
					this.SendPropertyChanged("CompName");
					this.OnCompNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalHDDSize", DbType="Int")]
		public System.Nullable<int> TotalHDDSize
		{
			get
			{
				return this._TotalHDDSize;
			}
			set
			{
				if ((this._TotalHDDSize != value))
				{
					this.OnTotalHDDSizeChanging(value);
					this.SendPropertyChanging();
					this._TotalHDDSize = value;
					this.SendPropertyChanged("TotalHDDSize");
					this.OnTotalHDDSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalFreeSize", DbType="Int")]
		public System.Nullable<int> TotalFreeSize
		{
			get
			{
				return this._TotalFreeSize;
			}
			set
			{
				if ((this._TotalFreeSize != value))
				{
					this.OnTotalFreeSizeChanging(value);
					this.SendPropertyChanging();
					this._TotalFreeSize = value;
					this.SendPropertyChanged("TotalFreeSize");
					this.OnTotalFreeSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DriveCount", DbType="Int")]
		public System.Nullable<int> DriveCount
		{
			get
			{
				return this._DriveCount;
			}
			set
			{
				if ((this._DriveCount != value))
				{
					this.OnDriveCountChanging(value);
					this.SendPropertyChanging();
					this._DriveCount = value;
					this.SendPropertyChanged("DriveCount");
					this.OnDriveCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DriveInterfaces", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string DriveInterfaces
		{
			get
			{
				return this._DriveInterfaces;
			}
			set
			{
				if ((this._DriveInterfaces != value))
				{
					this.OnDriveInterfacesChanging(value);
					this.SendPropertyChanging();
					this._DriveInterfaces = value;
					this.SendPropertyChanged("DriveInterfaces");
					this.OnDriveInterfacesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultPrinterName", DbType="NVarChar(1024)")]
		public string DefaultPrinterName
		{
			get
			{
				return this._DefaultPrinterName;
			}
			set
			{
				if ((this._DefaultPrinterName != value))
				{
					this.OnDefaultPrinterNameChanging(value);
					this.SendPropertyChanging();
					this._DefaultPrinterName = value;
					this.SendPropertyChanged("DefaultPrinterName");
					this.OnDefaultPrinterNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailBoxSize", DbType="Int")]
		public System.Nullable<int> MailBoxSize
		{
			get
			{
				return this._MailBoxSize;
			}
			set
			{
				if ((this._MailBoxSize != value))
				{
					this.OnMailBoxSizeChanging(value);
					this.SendPropertyChanging();
					this._MailBoxSize = value;
					this.SendPropertyChanged("MailBoxSize");
					this.OnMailBoxSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileSize", DbType="Int")]
		public System.Nullable<int> ProfileSize
		{
			get
			{
				return this._ProfileSize;
			}
			set
			{
				if ((this._ProfileSize != value))
				{
					this.OnProfileSizeChanging(value);
					this.SendPropertyChanging();
					this._ProfileSize = value;
					this.SendPropertyChanged("ProfileSize");
					this.OnProfileSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileName", DbType="NVarChar(1024)")]
		public string ProfileName
		{
			get
			{
				return this._ProfileName;
			}
			set
			{
				if ((this._ProfileName != value))
				{
					this.OnProfileNameChanging(value);
					this.SendPropertyChanging();
					this._ProfileName = value;
					this.SendPropertyChanged("ProfileName");
					this.OnProfileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalMailSize", DbType="Int")]
		public System.Nullable<int> TotalMailSize
		{
			get
			{
				return this._TotalMailSize;
			}
			set
			{
				if ((this._TotalMailSize != value))
				{
					this.OnTotalMailSizeChanging(value);
					this.SendPropertyChanging();
					this._TotalMailSize = value;
					this.SendPropertyChanged("TotalMailSize");
					this.OnTotalMailSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_Printer", Storage="_Printers", ThisKey="Id", OtherKey="LoginId")]
		public EntitySet<Printer> Printers
		{
			get
			{
				return this._Printers;
			}
			set
			{
				this._Printers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_DiskDrive", Storage="_DiskDrives", ThisKey="Id", OtherKey="LoginId")]
		public EntitySet<DiskDrive> DiskDrives
		{
			get
			{
				return this._DiskDrives;
			}
			set
			{
				this._DiskDrives.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_Mail", Storage="_Mails", ThisKey="Id", OtherKey="LoginId")]
		public EntitySet<Mail> Mails
		{
			get
			{
				return this._Mails;
			}
			set
			{
				this._Mails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_UserFile", Storage="_UserFiles", ThisKey="Id", OtherKey="LoginId")]
		public EntitySet<UserFile> UserFiles
		{
			get
			{
				return this._UserFiles;
			}
			set
			{
				this._UserFiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_UserProgram", Storage="_UserPrograms", ThisKey="Id", OtherKey="LoginId")]
		public EntitySet<UserProgram> UserPrograms
		{
			get
			{
				return this._UserPrograms;
			}
			set
			{
				this._UserPrograms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_OdinC", Storage="_OdinCs", ThisKey="Id", OtherKey="LoginId")]
		public EntitySet<OdinC> OdinCs
		{
			get
			{
				return this._OdinCs;
			}
			set
			{
				this._OdinCs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Printers(Printer entity)
		{
			this.SendPropertyChanging();
			entity.Login = this;
		}
		
		private void detach_Printers(Printer entity)
		{
			this.SendPropertyChanging();
			entity.Login = null;
		}
		
		private void attach_DiskDrives(DiskDrive entity)
		{
			this.SendPropertyChanging();
			entity.Login = this;
		}
		
		private void detach_DiskDrives(DiskDrive entity)
		{
			this.SendPropertyChanging();
			entity.Login = null;
		}
		
		private void attach_Mails(Mail entity)
		{
			this.SendPropertyChanging();
			entity.Login = this;
		}
		
		private void detach_Mails(Mail entity)
		{
			this.SendPropertyChanging();
			entity.Login = null;
		}
		
		private void attach_UserFiles(UserFile entity)
		{
			this.SendPropertyChanging();
			entity.Login = this;
		}
		
		private void detach_UserFiles(UserFile entity)
		{
			this.SendPropertyChanging();
			entity.Login = null;
		}
		
		private void attach_UserPrograms(UserProgram entity)
		{
			this.SendPropertyChanging();
			entity.Login = this;
		}
		
		private void detach_UserPrograms(UserProgram entity)
		{
			this.SendPropertyChanging();
			entity.Login = null;
		}
		
		private void attach_OdinCs(OdinC entity)
		{
			this.SendPropertyChanging();
			entity.Login = this;
		}
		
		private void detach_OdinCs(OdinC entity)
		{
			this.SendPropertyChanging();
			entity.Login = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserFiles")]
	public partial class UserFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Lable;
		
		private string _Ext;
		
		private System.Nullable<int> _Size;
		
		private System.Nullable<int> _LoginId;
		
		private EntityRef<Login> _Login;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLableChanging(string value);
    partial void OnLableChanged();
    partial void OnExtChanging(string value);
    partial void OnExtChanged();
    partial void OnSizeChanging(System.Nullable<int> value);
    partial void OnSizeChanged();
    partial void OnLoginIdChanging(System.Nullable<int> value);
    partial void OnLoginIdChanged();
    #endregion
		
		public UserFile()
		{
			this._Login = default(EntityRef<Login>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lable", DbType="NVarChar(1024)")]
		public string Lable
		{
			get
			{
				return this._Lable;
			}
			set
			{
				if ((this._Lable != value))
				{
					this.OnLableChanging(value);
					this.SendPropertyChanging();
					this._Lable = value;
					this.SendPropertyChanged("Lable");
					this.OnLableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ext", DbType="NVarChar(1024)")]
		public string Ext
		{
			get
			{
				return this._Ext;
			}
			set
			{
				if ((this._Ext != value))
				{
					this.OnExtChanging(value);
					this.SendPropertyChanging();
					this._Ext = value;
					this.SendPropertyChanged("Ext");
					this.OnExtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="Int")]
		public System.Nullable<int> Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginId", DbType="Int")]
		public System.Nullable<int> LoginId
		{
			get
			{
				return this._LoginId;
			}
			set
			{
				if ((this._LoginId != value))
				{
					if (this._Login.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoginIdChanging(value);
					this.SendPropertyChanging();
					this._LoginId = value;
					this.SendPropertyChanged("LoginId");
					this.OnLoginIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_UserFile", Storage="_Login", ThisKey="LoginId", OtherKey="Id", IsForeignKey=true)]
		public Login Login
		{
			get
			{
				return this._Login.Entity;
			}
			set
			{
				Login previousValue = this._Login.Entity;
				if (((previousValue != value) 
							|| (this._Login.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Login.Entity = null;
						previousValue.UserFiles.Remove(this);
					}
					this._Login.Entity = value;
					if ((value != null))
					{
						value.UserFiles.Add(this);
						this._LoginId = value.Id;
					}
					else
					{
						this._LoginId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Login");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserPrograms")]
	public partial class UserProgram : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _LoginId;
		
		private string _Name;
		
		private EntityRef<Login> _Login;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLoginIdChanging(System.Nullable<int> value);
    partial void OnLoginIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public UserProgram()
		{
			this._Login = default(EntityRef<Login>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginId", DbType="Int")]
		public System.Nullable<int> LoginId
		{
			get
			{
				return this._LoginId;
			}
			set
			{
				if ((this._LoginId != value))
				{
					if (this._Login.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoginIdChanging(value);
					this.SendPropertyChanging();
					this._LoginId = value;
					this.SendPropertyChanged("LoginId");
					this.OnLoginIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(1024)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_UserProgram", Storage="_Login", ThisKey="LoginId", OtherKey="Id", IsForeignKey=true)]
		public Login Login
		{
			get
			{
				return this._Login.Entity;
			}
			set
			{
				Login previousValue = this._Login.Entity;
				if (((previousValue != value) 
							|| (this._Login.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Login.Entity = null;
						previousValue.UserPrograms.Remove(this);
					}
					this._Login.Entity = value;
					if ((value != null))
					{
						value.UserPrograms.Add(this);
						this._LoginId = value.Id;
					}
					else
					{
						this._LoginId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Login");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhonesDruzhba")]
	public partial class PhonesDruzhba : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Dep;
		
		private string _Post;
		
		private string _PIB;
		
		private string _Phone;
		
		private string _F6;
		
		private string _CityPhone;
		
		private string _Mobile;
		
		private string _Email;
		
		private string _Birthday;
		
		private string _Function;
		
		private string _AllowMobileCall;
		
		private string _Фото;
		
		private string _F14;
		
		private int _Id;
		
		private string _FromFile;
		
		private string _ObjectName;
		
		private System.Nullable<int> _ExcelRowNum;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnDepChanging(string value);
    partial void OnDepChanged();
    partial void OnPostChanging(string value);
    partial void OnPostChanged();
    partial void OnPIBChanging(string value);
    partial void OnPIBChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnF6Changing(string value);
    partial void OnF6Changed();
    partial void OnCityPhoneChanging(string value);
    partial void OnCityPhoneChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnBirthdayChanging(string value);
    partial void OnBirthdayChanged();
    partial void OnFunctionChanging(string value);
    partial void OnFunctionChanged();
    partial void OnAllowMobileCallChanging(string value);
    partial void OnAllowMobileCallChanged();
    partial void OnФотоChanging(string value);
    partial void OnФотоChanged();
    partial void OnF14Changing(string value);
    partial void OnF14Changed();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFromFileChanging(string value);
    partial void OnFromFileChanged();
    partial void OnObjectNameChanging(string value);
    partial void OnObjectNameChanged();
    partial void OnExcelRowNumChanging(System.Nullable<int> value);
    partial void OnExcelRowNumChanged();
    #endregion
		
		public PhonesDruzhba()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(255)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dep", DbType="NVarChar(255)")]
		public string Dep
		{
			get
			{
				return this._Dep;
			}
			set
			{
				if ((this._Dep != value))
				{
					this.OnDepChanging(value);
					this.SendPropertyChanging();
					this._Dep = value;
					this.SendPropertyChanged("Dep");
					this.OnDepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Post", DbType="NVarChar(255)")]
		public string Post
		{
			get
			{
				return this._Post;
			}
			set
			{
				if ((this._Post != value))
				{
					this.OnPostChanging(value);
					this.SendPropertyChanging();
					this._Post = value;
					this.SendPropertyChanged("Post");
					this.OnPostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PIB", DbType="NVarChar(255)")]
		public string PIB
		{
			get
			{
				return this._PIB;
			}
			set
			{
				if ((this._PIB != value))
				{
					this.OnPIBChanging(value);
					this.SendPropertyChanging();
					this._PIB = value;
					this.SendPropertyChanged("PIB");
					this.OnPIBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(255)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F6", DbType="NVarChar(255)")]
		public string F6
		{
			get
			{
				return this._F6;
			}
			set
			{
				if ((this._F6 != value))
				{
					this.OnF6Changing(value);
					this.SendPropertyChanging();
					this._F6 = value;
					this.SendPropertyChanged("F6");
					this.OnF6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityPhone", DbType="NVarChar(255)")]
		public string CityPhone
		{
			get
			{
				return this._CityPhone;
			}
			set
			{
				if ((this._CityPhone != value))
				{
					this.OnCityPhoneChanging(value);
					this.SendPropertyChanging();
					this._CityPhone = value;
					this.SendPropertyChanged("CityPhone");
					this.OnCityPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(255)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(255)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthday", DbType="NVarChar(255)")]
		public string Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				if ((this._Birthday != value))
				{
					this.OnBirthdayChanging(value);
					this.SendPropertyChanging();
					this._Birthday = value;
					this.SendPropertyChanged("Birthday");
					this.OnBirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Function]", Storage="_Function", DbType="NVarChar(255)")]
		public string Function
		{
			get
			{
				return this._Function;
			}
			set
			{
				if ((this._Function != value))
				{
					this.OnFunctionChanging(value);
					this.SendPropertyChanging();
					this._Function = value;
					this.SendPropertyChanged("Function");
					this.OnFunctionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowMobileCall", DbType="NVarChar(255)")]
		public string AllowMobileCall
		{
			get
			{
				return this._AllowMobileCall;
			}
			set
			{
				if ((this._AllowMobileCall != value))
				{
					this.OnAllowMobileCallChanging(value);
					this.SendPropertyChanging();
					this._AllowMobileCall = value;
					this.SendPropertyChanged("AllowMobileCall");
					this.OnAllowMobileCallChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Фото", DbType="NVarChar(255)")]
		public string Фото
		{
			get
			{
				return this._Фото;
			}
			set
			{
				if ((this._Фото != value))
				{
					this.OnФотоChanging(value);
					this.SendPropertyChanging();
					this._Фото = value;
					this.SendPropertyChanged("Фото");
					this.OnФотоChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F14", DbType="NVarChar(255)")]
		public string F14
		{
			get
			{
				return this._F14;
			}
			set
			{
				if ((this._F14 != value))
				{
					this.OnF14Changing(value);
					this.SendPropertyChanging();
					this._F14 = value;
					this.SendPropertyChanged("F14");
					this.OnF14Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromFile", DbType="NVarChar(1024)")]
		public string FromFile
		{
			get
			{
				return this._FromFile;
			}
			set
			{
				if ((this._FromFile != value))
				{
					this.OnFromFileChanging(value);
					this.SendPropertyChanging();
					this._FromFile = value;
					this.SendPropertyChanged("FromFile");
					this.OnFromFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectName", DbType="NVarChar(1024)")]
		public string ObjectName
		{
			get
			{
				return this._ObjectName;
			}
			set
			{
				if ((this._ObjectName != value))
				{
					this.OnObjectNameChanging(value);
					this.SendPropertyChanging();
					this._ObjectName = value;
					this.SendPropertyChanged("ObjectName");
					this.OnObjectNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExcelRowNum", DbType="Int")]
		public System.Nullable<int> ExcelRowNum
		{
			get
			{
				return this._ExcelRowNum;
			}
			set
			{
				if ((this._ExcelRowNum != value))
				{
					this.OnExcelRowNumChanging(value);
					this.SendPropertyChanging();
					this._ExcelRowNum = value;
					this.SendPropertyChanged("ExcelRowNum");
					this.OnExcelRowNumChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompanyObjects")]
	public partial class CompanyObject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ObjName;
		
		private int _Id;
		
		private string _Filial;
		
		private string _Code;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnObjNameChanging(string value);
    partial void OnObjNameChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFilialChanging(string value);
    partial void OnFilialChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    #endregion
		
		public CompanyObject()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjName", DbType="NVarChar(255)")]
		public string ObjName
		{
			get
			{
				return this._ObjName;
			}
			set
			{
				if ((this._ObjName != value))
				{
					this.OnObjNameChanging(value);
					this.SendPropertyChanging();
					this._ObjName = value;
					this.SendPropertyChanged("ObjName");
					this.OnObjNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Filial", DbType="NVarChar(255)")]
		public string Filial
		{
			get
			{
				return this._Filial;
			}
			set
			{
				if ((this._Filial != value))
				{
					this.OnFilialChanging(value);
					this.SendPropertyChanging();
					this._Filial = value;
					this.SendPropertyChanged("Filial");
					this.OnFilialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(255)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OdinC")]
	public partial class OdinC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _LoginId;
		
		private string _Name;
		
		private string _Info;
		
		private EntityRef<Login> _Login;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLoginIdChanging(System.Nullable<int> value);
    partial void OnLoginIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnInfoChanging(string value);
    partial void OnInfoChanged();
    #endregion
		
		public OdinC()
		{
			this._Login = default(EntityRef<Login>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginId", DbType="Int")]
		public System.Nullable<int> LoginId
		{
			get
			{
				return this._LoginId;
			}
			set
			{
				if ((this._LoginId != value))
				{
					if (this._Login.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoginIdChanging(value);
					this.SendPropertyChanging();
					this._LoginId = value;
					this.SendPropertyChanged("LoginId");
					this.OnLoginIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(1024)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Info", DbType="NVarChar(1024)")]
		public string Info
		{
			get
			{
				return this._Info;
			}
			set
			{
				if ((this._Info != value))
				{
					this.OnInfoChanging(value);
					this.SendPropertyChanging();
					this._Info = value;
					this.SendPropertyChanged("Info");
					this.OnInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_OdinC", Storage="_Login", ThisKey="LoginId", OtherKey="Id", IsForeignKey=true)]
		public Login Login
		{
			get
			{
				return this._Login.Entity;
			}
			set
			{
				Login previousValue = this._Login.Entity;
				if (((previousValue != value) 
							|| (this._Login.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Login.Entity = null;
						previousValue.OdinCs.Remove(this);
					}
					this._Login.Entity = value;
					if ((value != null))
					{
						value.OdinCs.Add(this);
						this._LoginId = value.Id;
					}
					else
					{
						this._LoginId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Login");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
